"use strict";(self.webpackChunkyuan_blog=self.webpackChunkyuan_blog||[]).push([[629],{6262:(e,t)=>{t.A=(e,t)=>{const n=e.__vccOpts||e;for(const[e,i]of t)n[e]=i;return n}},4547:(e,t,n)=>{n.r(t),n.d(t,{comp:()=>l,data:()=>o});var i=n(641);const p={},l=(0,n(6262).A)(p,[["render",function(e,t){return(0,i.uX)(),(0,i.CE)("div",null,t[0]||(t[0]=[(0,i.Fv)('<h2 id="css复合型选择器" tabindex="-1"><a class="header-anchor" href="#css复合型选择器"><span>css复合型选择器</span></a></h2><ol><li><p>交集选择器 由两个选择器组成，第一个标签选择器，第二个类选择器，两个选择器之间不能有空格. p.int</p></li><li><p>并集选择器 适合公共样式 div, p, int</p></li><li><p>后代元素选择器 查找所有复合条件的后代元素(全部) div p {}</p></li><li><p>子代元素选择器 查找所有符合条件的子代元素(第一层) div&gt;p{}</p></li><li><p>兄弟元素选择器 查找紧跟其后的所有标签 .int~p{}</p></li><li><p>相邻元素选择器 查找紧跟其后的第一个标签 .int+p{}</p></li></ol><h2 id="伪类" tabindex="-1"><a class="header-anchor" href="#伪类"><span>伪类</span></a></h2><p><code>:hover</code> 悬停 <code>:active</code> 按下</p><p>通过伪类查找元素 所有标签通用 <code>:first-child</code> 第一个标签 <code>:last-child</code> 最后一个标签 <code>:nth-child(n)</code> 查找第n个标签</p>',5)]))}]]),o=JSON.parse('{"path":"/director/web_note/day8.html","title":"第八天","lang":"zh-CN","frontmatter":{"title":"第八天","icon":"pen-to-square","order":8,"category":["CSS"],"author":"Yuan","date":"2024-10-16T00:00:00.000Z","description":"css复合型选择器 交集选择器 由两个选择器组成，第一个标签选择器，第二个类选择器，两个选择器之间不能有空格. p.int 并集选择器 适合公共样式 div, p, int 后代元素选择器 查找所有复合条件的后代元素(全部) div p {} 子代元素选择器 查找所有符合条件的子代元素(第一层) div>p{} 兄弟元素选择器 查找紧跟其后的所有标签 ...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://seven2023six.github.io/yuan_blog/yuan_blog/director/web_note/day8.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"第八天"}],["meta",{"property":"og:description","content":"css复合型选择器 交集选择器 由两个选择器组成，第一个标签选择器，第二个类选择器，两个选择器之间不能有空格. p.int 并集选择器 适合公共样式 div, p, int 后代元素选择器 查找所有复合条件的后代元素(全部) div p {} 子代元素选择器 查找所有符合条件的子代元素(第一层) div>p{} 兄弟元素选择器 查找紧跟其后的所有标签 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Yuan"}],["meta",{"property":"article:published_time","content":"2024-10-16T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第八天\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-16T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yuan\\"}]}"]]},"headers":[{"level":2,"title":"css复合型选择器","slug":"css复合型选择器","link":"#css复合型选择器","children":[]},{"level":2,"title":"伪类","slug":"伪类","link":"#伪类","children":[]}],"readingTime":{"minutes":0.75,"words":224},"filePathRelative":"director/web_note/day8.md","localizedDate":"2024年10月16日","excerpt":"<h2>css复合型选择器</h2>\\n<ol>\\n<li>\\n<p>交集选择器\\n由两个选择器组成，第一个标签选择器，第二个类选择器，两个选择器之间不能有空格.\\np.int</p>\\n</li>\\n<li>\\n<p>并集选择器\\n适合公共样式\\ndiv, p, int</p>\\n</li>\\n<li>\\n<p>后代元素选择器\\n查找所有复合条件的后代元素(全部)\\ndiv p {}</p>\\n</li>\\n<li>\\n<p>子代元素选择器\\n查找所有符合条件的子代元素(第一层)\\ndiv&gt;p{}</p>\\n</li>\\n<li>\\n<p>兄弟元素选择器\\n查找紧跟其后的所有标签\\n.int~p{}</p>\\n</li>\\n<li>\\n<p>相邻元素选择器\\n查找紧跟其后的第一个标签\\n.int+p{}</p>\\n</li>\\n</ol>","autoDesc":true}')}}]);