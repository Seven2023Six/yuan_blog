"use strict";(self.webpackChunkyuan_blog=self.webpackChunkyuan_blog||[]).push([[776],{6262:(s,i)=>{i.A=(s,i)=>{const e=s.__vccOpts||s;for(const[s,n]of i)e[s]=n;return e}},3487:(s,i,e)=>{e.r(i),e.d(i,{comp:()=>l,data:()=>t});var n=e(641);const a={},l=(0,e(6262).A)(a,[["render",function(s,i){return(0,n.uX)(),(0,n.CE)("div",null,i[0]||(i[0]=[(0,n.Fv)('<h1 id="第十天" tabindex="-1"><a class="header-anchor" href="#第十天"><span>第十天</span></a></h1><h2 id="dom" tabindex="-1"><a class="header-anchor" href="#dom"><span>DOM</span></a></h2><blockquote><p>文档对象模型，是W3C组织推荐的处理可扩展标记语言的标准编程接口，W3C定义了一系列的DOM接口，通过这些DOM接口可以改变网页的内容，样式，属性等</p></blockquote><h3 id="dom树" tabindex="-1"><a class="header-anchor" href="#dom树"><span>DOM树</span></a></h3><ul><li>节点：网页中所有的内容都是节点(标签，属性，文本等)</li><li>文档：一个页面就是一个文档，DOM中用document表示</li><li>元素：页面中的所有标签都是元素，DOM中用element表示</li></ul><h3 id="获取页面的元素" tabindex="-1"><a class="header-anchor" href="#获取页面的元素"><span>获取页面的元素</span></a></h3><p>1.根据ID获取 <code>document.getElementById(&#39;id&#39;)</code></p><p>2.根据标签名获取 <code>document.getElementsByTagName(&#39;标签名&#39;)</code></p><p>3.根据class获取 <code>document.getElementsByClassName(&#39;类名&#39;)</code></p><p>4.通过选择器获取第一个元素</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">querySelector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;选择器&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">querySelector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;#id&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">querySelector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;.class&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">querySelector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;div&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">querySelector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;div&gt;p&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.通过选择器获取全部元素 <code>document.querySelectorAll(&#39;选择器&#39;)</code></p><p>6.获取body元素 <code>document.body</code></p><p>7.获取html元素 <code>document.documentElement</code></p><h3 id="操作元素" tabindex="-1"><a class="header-anchor" href="#操作元素"><span>操作元素</span></a></h3><blockquote><p>我们可以利用DOM操作元素来改变元素里的内容，样式，属性等。</p></blockquote><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">改变元素内容</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">innerText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  不识别</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">标签，空格和换行不保留</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">innerHTML</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  识别</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">标签，空格和换行保留</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">操作元素属性</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">src</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> alt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> title</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> width</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">操作元素样式</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">1.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">2.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">className</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> js里的样式书写要采用驼峰命名法书写：fontSize</p><h3 id="事件操作" tabindex="-1"><a class="header-anchor" href="#事件操作"><span>事件操作</span></a></h3><p><code>onclick</code> 点击事件 <code>onchange</code> 改变事件 <code>onmouseover</code> 鼠标移进 <code>onmouseout</code> 鼠标移出 <code>onblur</code> 失去焦点 <code>onfocus</code> 获得焦点 <code>onload</code> 自动加载事件</p><p>事件绑定的方法</p><ol><li><code>&lt;button onclick=&#39;fun()&#39;&gt;按钮&lt;/button&gt;</code></li><li><code>button.onclick=function(){}</code></li></ol>',22)]))}]]),t=JSON.parse('{"path":"/director/web_note/day10.html","title":"第十天","lang":"zh-CN","frontmatter":{"description":"第十天 DOM 文档对象模型，是W3C组织推荐的处理可扩展标记语言的标准编程接口，W3C定义了一系列的DOM接口，通过这些DOM接口可以改变网页的内容，样式，属性等 DOM树 节点：网页中所有的内容都是节点(标签，属性，文本等) 文档：一个页面就是一个文档，DOM中用document表示 元素：页面中的所有标签都是元素，DOM中用element表示 获...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://seven2023six.github.io/yuan_blog/yuan_blog/director/web_note/day10.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"第十天"}],["meta",{"property":"og:description","content":"第十天 DOM 文档对象模型，是W3C组织推荐的处理可扩展标记语言的标准编程接口，W3C定义了一系列的DOM接口，通过这些DOM接口可以改变网页的内容，样式，属性等 DOM树 节点：网页中所有的内容都是节点(标签，属性，文本等) 文档：一个页面就是一个文档，DOM中用document表示 元素：页面中的所有标签都是元素，DOM中用element表示 获..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第十天\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yuan\\",\\"url\\":\\"https://seven2023six.github.io/yuan_blog/\\"}]}"]]},"headers":[{"level":2,"title":"DOM","slug":"dom","link":"#dom","children":[{"level":3,"title":"DOM树","slug":"dom树","link":"#dom树","children":[]},{"level":3,"title":"获取页面的元素","slug":"获取页面的元素","link":"#获取页面的元素","children":[]},{"level":3,"title":"操作元素","slug":"操作元素","link":"#操作元素","children":[]},{"level":3,"title":"事件操作","slug":"事件操作","link":"#事件操作","children":[]}]}],"readingTime":{"minutes":1.27,"words":380},"filePathRelative":"director/web_note/day10.md","excerpt":"\\n<h2>DOM</h2>\\n<blockquote>\\n<p>文档对象模型，是W3C组织推荐的处理可扩展标记语言的标准编程接口，W3C定义了一系列的DOM接口，通过这些DOM接口可以改变网页的内容，样式，属性等</p>\\n</blockquote>\\n<h3>DOM树</h3>\\n<ul>\\n<li>节点：网页中所有的内容都是节点(标签，属性，文本等)</li>\\n<li>文档：一个页面就是一个文档，DOM中用document表示</li>\\n<li>元素：页面中的所有标签都是元素，DOM中用element表示</li>\\n</ul>\\n<h3>获取页面的元素</h3>\\n<p>1.根据ID获取\\n<code>document.getElementById(\'id\')</code></p>","autoDesc":true}')}}]);